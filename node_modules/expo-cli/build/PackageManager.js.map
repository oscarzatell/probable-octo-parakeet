{"version":3,"sources":["../src/PackageManager.ts"],"names":["ansi","source","npmPeerDependencyWarningPattern","RegExp","yarnPeerDependencyWarningPattern","NpmStderrTransform","Transform","_transform","chunk","encoding","callback","push","toString","replace","YarnStderrTransform","NpmPackageManager","constructor","cwd","options","stdio","name","installAsync","_runAsync","addAsync","names","versioned","unversioned","_parseSpecs","length","_patchAsync","map","spec","raw","addDevAsync","args","join","promise","child","stderr","ignoreStdio","pipe","line","process","result","forEach","rawSpec","specs","packageType","pkgPath","path","pkgRaw","fs","readFile","flag","pkg","JSON","parse","writeJson","spaces","indent","EOL","YarnPackageManager","createForProject","projectRoot","console","warn","PackageManager","npm","yarn"],"mappings":"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","sourcesContent":["import ansiRegex from 'ansi-regex';\nimport { isUsingYarn } from '@expo/config';\nimport spawnAsync, { SpawnOptions } from '@expo/spawn-async';\nimport split from 'split';\nimport { Transform } from 'stream';\nimport npmPackageArg from 'npm-package-arg';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport detectIndent from 'detect-indent';\nimport detectNewline from 'detect-newline';\n\nimport log from './log';\n\nconst ansi = `(?:${ansiRegex().source})*`;\nconst npmPeerDependencyWarningPattern = new RegExp(\n  `${ansi}npm${ansi} ${ansi}WARN${ansi}.+You must install peer dependencies yourself\\\\.\\n`,\n  'g'\n);\nconst yarnPeerDependencyWarningPattern = new RegExp(\n  `${ansi}warning${ansi} \"[^\"]+\" has (?:unmet|incorrect) peer dependency \"[^\"]+\"\\\\.\\n`,\n  'g'\n);\n\nclass NpmStderrTransform extends Transform {\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    this.push(chunk.toString().replace(npmPeerDependencyWarningPattern, ''));\n    callback();\n  }\n}\n\nclass YarnStderrTransform extends Transform {\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    this.push(chunk.toString().replace(yarnPeerDependencyWarningPattern, ''));\n    callback();\n  }\n}\n\nexport interface PackageManager {\n  installAsync(): Promise<void>;\n  addAsync(...names: string[]): Promise<void>;\n  addDevAsync(...names: string[]): Promise<void>;\n}\n\nexport class NpmPackageManager implements PackageManager {\n  options: SpawnOptions;\n\n  constructor({ cwd }: { cwd: string }) {\n    this.options = { cwd, stdio: ['inherit', 'inherit', 'pipe'] };\n  }\n  get name() {\n    return 'npm';\n  }\n  async installAsync() {\n    await this._runAsync(['install']);\n  }\n  async addAsync(...names: string[]) {\n    const { versioned, unversioned } = this._parseSpecs(names);\n    if (versioned.length) {\n      await this._patchAsync(versioned, 'dependencies');\n      await this._runAsync(['install']);\n    }\n    if (unversioned.length) {\n      await this._runAsync(['install', '--save', ...unversioned.map(spec => spec.raw)]);\n    }\n  }\n  async addDevAsync(...names: string[]) {\n    const { versioned, unversioned } = this._parseSpecs(names);\n    if (versioned.length) {\n      await this._patchAsync(versioned, 'devDependencies');\n      await this._runAsync(['install']);\n    }\n    if (unversioned.length) {\n      await this._runAsync(['install', '--save-dev', ...unversioned.map(spec => spec.raw)]);\n    }\n  }\n\n  // Private\n  async _runAsync(args: string[]) {\n    log(`> npm ${args.join(' ')}`);\n    const promise = spawnAsync('npm', [...args], this.options);\n    if (promise.child.stderr && !this.options.ignoreStdio) {\n      promise.child.stderr\n        .pipe(split(/\\r?\\n/, (line: string) => line + '\\n'))\n        .pipe(new NpmStderrTransform())\n        .pipe(process.stderr);\n    }\n    await promise;\n  }\n\n  _parseSpecs(names: string[]) {\n    const result: {\n      versioned: npmPackageArg.Result[];\n      unversioned: npmPackageArg.Result[];\n    } = { versioned: [], unversioned: [] };\n    names\n      .map(name => npmPackageArg(name))\n      .forEach(spec => {\n        if (spec.rawSpec) {\n          result.versioned.push(spec);\n        } else {\n          result.unversioned.push(spec);\n        }\n      });\n    return result;\n  }\n\n  async _patchAsync(\n    specs: npmPackageArg.Result[],\n    packageType: 'dependencies' | 'devDependencies'\n  ) {\n    const pkgPath = path.join(this.options.cwd || '.', 'package.json');\n    const pkgRaw = await fs.readFile(pkgPath, { encoding: 'utf8', flag: 'r' });\n    const pkg = JSON.parse(pkgRaw);\n    specs.forEach(spec => {\n      pkg[packageType] = pkg[packageType] || {};\n      pkg[packageType][spec.name!] = spec.rawSpec;\n    });\n    await fs.writeJson(pkgPath, pkg, {\n      spaces: detectIndent(pkgRaw).indent,\n      EOL: detectNewline(pkgRaw),\n    });\n  }\n}\n\nexport class YarnPackageManager implements PackageManager {\n  options: SpawnOptions;\n\n  constructor({ cwd }: { cwd: string }) {\n    this.options = {\n      cwd,\n      stdio: ['inherit', 'inherit', 'pipe'],\n    };\n  }\n  get name() {\n    return 'Yarn';\n  }\n  async installAsync() {\n    await this._runAsync(['install']);\n  }\n  async addAsync(...names: string[]) {\n    await this._runAsync(['add', ...names]);\n  }\n  async addDevAsync(...names: string[]) {\n    await this._runAsync(['add', '--dev', ...names]);\n  }\n\n  // Private\n  async _runAsync(args: string[]) {\n    log(`> yarn ${args.join(' ')}`);\n    const promise = spawnAsync('yarnpkg', args, this.options);\n    if (promise.child.stderr && !this.options.ignoreStdio) {\n      promise.child.stderr.pipe(new YarnStderrTransform()).pipe(process.stderr);\n    }\n    await promise;\n  }\n}\n\nexport type CreateForProjectOptions = { npm?: boolean; yarn?: boolean };\n\nexport function createForProject(projectRoot: string, options: CreateForProjectOptions = {}) {\n  console.warn(\n    '`createForProject` is deprecated in favor of `createForProject` from `@expo/package-manager`'\n  );\n  let PackageManager;\n  if (options.npm) {\n    PackageManager = NpmPackageManager;\n  } else if (options.yarn) {\n    PackageManager = YarnPackageManager;\n  } else if (isUsingYarn(projectRoot)) {\n    PackageManager = YarnPackageManager;\n  } else {\n    PackageManager = NpmPackageManager;\n  }\n  return new PackageManager({ cwd: projectRoot });\n}\n"],"file":"PackageManager.js"}