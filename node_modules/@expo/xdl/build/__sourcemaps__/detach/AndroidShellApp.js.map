{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["getManifestAsync","saveUrlToPathAsync","spawnAsyncThrowError","spawnAsync","regexFileAsync","deleteLinesInFileAsync","parseSdkMajorVersion","ExponentTools","imageKeys","exponentDirectory","workingDir","process","env","EXPO_UNIVERSE_DIR","path","join","xmlWeirdAndroidEscape","original","let","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","async","args","url","sdkVersion","releaseChannel","manifest","await","Accept","fullManifestUrl","replace","bundleUrl","shellPath","fs","remove","writeFileSync","JSON","stringify","getRemoteOrLocalUrl","key","isDetached","_","get","backgroundImagesForApp","basePath","splash","results","reduce","acc","imageKey","push","length","getSplashScreenBackgroundColor","backgroundColor","android","shouldShowLoadingView","resizeMode","copyInitialShellAppFilesAsync","androidSrcPath","copyToShellApp","fileName","copy","e","code","Error","message","createAndroidShellAppAsync","privateConfigFile","configuration","keystore","alias","keystorePassword","keyPassword","outputFile","modules","buildType","buildMode","exponentDir","ensureDir","logger","withFields","buildPhase","info","privateConfig","privateConfigContents","readFile","parse","config","androidBuildConfiguration","keyAlias","buildFlags","StandaloneBuildFlags","createAndroid","context","StandaloneContext","createServiceContext","removeObsoleteSdks","runShellAppModificationsAsync","prepareEnabledModules","skipBuild","buildShellAppAsync","shellPathForContext","type","data","projectPath","expoSourcePath","getPrivateConfig","exp","fnLogger","published","isRunningInUserContext","versionCode","javaPackage","package","name","scheme","detach","isFullManifest","version","backgroundImages","splashBackgroundColor","updatesDisabled","updates","enabled","appBuildGradle","settingsGradle","writeFile","runShPath","pathExists","randomID","uuid","v4","newScheme","newSchemeSuffix","intentFilters","renderIntentFilters","schemes","filter","searchLine","schemesTags","map","facebookScheme","permissions","whitelist","forEach","s","includes","blacklist","p","createAndWriteIconsToPathAsync","globby","cwd","absolute","filePath","removeSync","Promise","all","image","resolve","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","googleMobileAdsAppId","googleMobileAdsAutoInit","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","warn","facebookAppId","facebookDisplayName","facebookAutoInitEnabled","facebookAutoLogAppEventsEnabled","facebookAdvertiserIDCollectionEnabled","ext","isRelease","build","debugOrRelease","devOrProd","debugOrReleaseL","devOrProdL","shellFile","shellUnalignedFile","outputDirPath","gradleBuildCommand","outputPath","removeIfExists","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","pipeToLogger","loggerFields","ANDROID_KEY_ALIAS","ANDROID_KEY_PASSWORD","ANDROID_KEYSTORE_PATH","ANDROID_KEYSTORE_PASSWORD","addDetachedConfigToExp","console","assetsDirectory","publishBundlePath","relative","publishManifestPath","removeInvalidSdkLinesWhenPreparingShell","majorSdkVersion","RegExp","requiredSdkVersion","filePathsToTransform","expoviewBuildGradle","settingsBuildGradle","multipleVersionReactNativeActivity","constants","appAndroidManifest","effectiveSdkVersion","Object","values","enabledModulesDir","packagesDir","ensureSymlink","mkdirp","mod","dirname"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\nimport uuid from 'uuid';\n\nimport { createAndWriteIconsToPathAsync } from './AndroidIcons';\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport renderIntentFilters from './AndroidIntentFilters';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  parseSdkMajorVersion,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory(workingDir) {\n  if (workingDir) {\n    return workingDir;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args) {\n  let { url, sdkVersion, releaseChannel, workingDir } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n    Accept: 'application/expo+json,application/json',\n  });\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(workingDir), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START EMBEDDED RESPONSES`,\n    `END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    const splash = _.get(manifest, 'android.splash');\n    const results = _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    // No splash screen images declared in 'android.splash' configuration, proceed to general one\n    if (results.length !== 0) {\n      return results;\n    }\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'contain' or 'cover' (since SDK33) or 'cover' (prior to SDK33) we should show LoadingView\n  that is presenting splash image in ImageView what allows full control over image sizing unlike\n  ImageDrawable that is provided by Android native splash screen API\n*/\nfunction shouldShowLoadingView(manifest, sdkVersion) {\n  const resizeMode =\n    (manifest.android && manifest.android.splash && manifest.android.splash.resizeMode) ||\n    (manifest.splash && manifest.splash.resizeMode);\n\n  return (\n    resizeMode &&\n    (parseSdkMajorVersion(sdkVersion) >= 33\n      ? resizeMode === 'contain' || resizeMode === 'cover'\n      : resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached,\n  sdkVersion\n) {\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      if (e.code === 'ENOENT') {\n        // Some files are not included in all ExpoKit versions, so this error can be ignored.\n      } else {\n        throw new Error(`Could not copy ${fileName} to shell app directory: ${e.message}`);\n      }\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('versioned-abis');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n\n  // kernel.android.bundle isn't ever used in standalone apps (at least in kernel v32)\n  // but in order to not change behavior in older SDKs, we'll remove the file only in 32+.\n  if (parseSdkMajorVersion(sdkVersion) >= 32) {\n    try {\n      await fs.remove(path.join(shellPath, 'app/src/main/assets/kernel.android.bundle'));\n    } catch (e) {\n      // let's hope it's just not present in the shell app template\n    }\n  }\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n    workingDir,\n    modules,\n    buildType,\n    buildMode,\n  } = args;\n\n  const exponentDir = exponentDirectory(workingDir);\n  let androidSrcPath = path.join(exponentDir, 'android');\n  let shellPath = path.join(exponentDir, 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n      Accept: 'application/expo+json,application/json',\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath, false, sdkVersion);\n  await removeObsoleteSdks(shellPath, sdkVersion);\n  await runShellAppModificationsAsync(context, sdkVersion, buildMode);\n  await prepareEnabledModules(shellPath, modules);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context, sdkVersion, buildType, buildMode);\n  }\n};\n\nfunction shellPathForContext(context) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(\n      exponentDirectory(\n        context.data.expoSourcePath && path.join(context.data.expoSourcePath, '..')\n      ),\n      'android-shell-app'\n    );\n  }\n}\n\n/**\n *  Resolve the private config for a project.\n *  For standalone apps, this is copied into a separate context field context.data.privateConfig\n *  by the turtle builder. For a local project, this is available in app.json under android.config.\n */\nfunction getPrivateConfig(context) {\n  if (context.data.privateConfig) {\n    return context.data.privateConfig;\n  } else {\n    const exp = context.data.exp;\n    if (exp && exp.android) {\n      return exp.android.config;\n    }\n  }\n}\n\nexport async function runShellAppModificationsAsync(context, sdkVersion, buildMode) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  const isRunningInUserContext = context.type === 'user';\n  // In SDK32 we've unified build process for shell and ejected apps\n  const isDetached = ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32 || isRunningInUserContext;\n\n  const privateConfig = getPrivateConfig(context);\n  if (!privateConfig) {\n    fnLogger.info('No config file specified.');\n  }\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isRunningInUserContext);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    if (isRunningInUserContext) {\n      await regexFileAsync(/\\/\\* UNCOMMENT WHEN DETACHING/g, '', appBuildGradle);\n      await regexFileAsync(/END UNCOMMENT WHEN DETACHING \\*\\//g, '', appBuildGradle);\n      await deleteLinesInFileAsync(\n        'WHEN_DETACHING_REMOVE_FROM_HERE',\n        'WHEN_DETACHING_REMOVE_TO_HERE',\n        appBuildGradle\n      );\n    }\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await deleteLinesInFileAsync(\n      'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n      'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n      appBuildGradle\n    );\n\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      let settingsGradle = path.join(shellPath, 'settings.gradle');\n      await deleteLinesInFileAsync(\n        'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n        'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n        settingsGradle\n      );\n    } else {\n      // Don't need to compile expoview or ReactAndroid\n      // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n      await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n    }\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n\n    const runShPath = path.join(shellPath, 'run.sh');\n    if (await fs.pathExists(runShPath)) {\n      await regexFileAsync('host.exp.exponent/', `${javaPackage}/`, runShPath);\n      await regexFileAsync('LauncherActivity', 'MainActivity', runShPath);\n    }\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${version}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN VERSIONS`,\n    `END VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script, since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  // Since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Handle 'contain' and 'cover' splashScreen mode by showing only background color and then actual splashScreen image inside AppLoadingView\n  if (shouldShowLoadingView(manifest, sdkVersion)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n\n    // show only background color if LoadingView will appear\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // In SDK32 this field got removed from AppConstants\n  if (parseSdkMajorVersion(sdkVersion) < 32 && isRunningInUserContext) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // Change stripe schemes and add meta-data\n  const randomID = uuid.v4();\n  const newScheme = `<meta-data android:name=\"standaloneStripeScheme\" android:value=\"${randomID}\" />`;\n  await regexFileAsync(\n    '<!-- ADD HERE STRIPE SCHEME META DATA -->',\n    newScheme,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  const newSchemeSuffix = `expo.modules.payments.stripe.${randomID}\" />`;\n  await regexFileAsync(\n    'expo.modules.payments.stripe\" />',\n    newSchemeSuffix,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START LAUNCHER INTENT FILTERS`,\n    `END LAUNCHER INTENT FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START HOME INTENT FILTERS`,\n    `END HOME INTENT FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add app-specific intent filters\n  const intentFilters = _.get(manifest, 'android.intentFilters');\n  if (intentFilters) {\n    if (isDetached) {\n      await regexFileAsync(\n        '<!-- ADD DETACH APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    } else {\n      await regexFileAsync(\n        '<!-- ADD SHELL APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n  }\n\n  // Add shell app scheme\n  const schemes = [scheme].filter(e => e);\n  if (schemes.length > 0) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    const schemesTags = schemes.map(scheme => `<data android:scheme=\"${scheme}\"/>`).join(`\n    `);\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        ${schemesTags}\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n  // Add Facebook app scheme\n  if (manifest.facebookScheme) {\n    await regexFileAsync(\n      '<!-- REPLACE WITH FACEBOOK SCHEME -->',\n      `<data android:scheme=\"${manifest.facebookScheme}\" />`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        // If shorthand form like `WRITE_CONTACTS` is provided, expand it to `android.permission.WRITE_CONTACTS`.\n        whitelist.push(`android.permission.${s}`);\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.WRITE_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN OPTIONAL PERMISSIONS`,\n      `END OPTIONAL PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icons\n  createAndWriteIconsToPathAsync(\n    context,\n    path.join(shellPath, 'app', 'src', 'main', 'res'),\n    isRunningInUserContext\n  );\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (\n      await globby(['**/shell_launch_background_image.png'], {\n        cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n        absolute: true,\n      })\n    ).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await Promise.all(\n      backgroundImages.map(async image => {\n        if (isRunningInUserContext) {\n          // local file so just copy it\n          await fs.copy(path.resolve(context.data.projectPath, image.url), image.path);\n        } else {\n          await saveUrlToPathAsync(image.url, image.path);\n        }\n      })\n    );\n  }\n\n  await AssetBundle.bundleAsync(\n    context,\n    manifest.bundledAssets,\n    `${shellPath}/app/src/main/assets`\n  );\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n    let googleMobileAdsAppId = privateConfig.googleMobileAdsAppId;\n    let googleMobileAdsAutoInit = privateConfig.googleMobileAdsAutoInit;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    // Delete existing Fabric API key.\n    await deleteLinesInFileAsync(\n      `BEGIN FABRIC CONFIG`,\n      `END FABRIC CONFIG`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n    await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n\n    if (fabric) {\n      // Put user's Fabric key if provided.\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    // Delete existing Google Maps API key.\n    await deleteLinesInFileAsync(\n      `BEGIN GOOGLE MAPS CONFIG`,\n      `END GOOGLE MAPS CONFIG`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    if (googleMaps) {\n      // Put user's Google Maps API key if provided.\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Mobile Ads App ID\n    // The app crashes if the app ID isn't provided, so if the user\n    // doesn't provide the ID, we leave the sample one.\n    if (googleMobileAdsAppId) {\n      // Delete existing Google Mobile Ads App ID.\n      await deleteLinesInFileAsync(\n        `BEGIN GOOGLE MOBILE ADS CONFIG`,\n        `END GOOGLE MOBILE ADS CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      // Put user's Google Mobile Ads App ID if provided.\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MOBILE ADS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.gms.ads.APPLICATION_ID\"\n      android:value=\"${googleMobileAdsAppId}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Auto-init of Google App Measurement\n    // unless the user explicitly specifies they want to auto-init, we leave delay set to true\n    if (googleMobileAdsAutoInit) {\n      await regexFileAsync(\n        '<meta-data android:name=\"com.google.android.gms.ads.DELAY_APP_MEASUREMENT_INIT\" android:value=\"true\"/>',\n        '<meta-data android:name=\"com.google.android.gms.ads.DELAY_APP_MEASUREMENT_INIT\" android:value=\"false\"/>',\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isRunningInUserContext) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Configure google-services.json\n  // It is either already in the shell app (placeholder or real one) or it has been added\n  // from `manifest.android.googleServicesFile`.\n  if (parseSdkMajorVersion(sdkVersion) >= 37) {\n    // New behavior - googleServicesFile overrides googleSignIn configuration\n    if (!manifest.android || !manifest.android.googleServicesFile) {\n      // No google-services.json file, let's use the placeholder one\n      // and insert keys manually (\"the old way\").\n\n      // This seems like something we can't really get away without:\n      //\n      // 1. A project with google-services plugin won't build without\n      //    a google-services.json file (the plugin makes sure to fail the build).\n      // 2. Adding the google-services plugin conditionally and properly (to be able\n      //    to build a project without that file) is too much hassle.\n      //\n      // So, let's use `host.exp.exponent` as a placeholder for the project's\n      // javaPackage. In custom shell apps there shouldn't ever be \"host.exp.exponent\"\n      // so this shouldn't cause any problems for advanced users.\n      await regexFileAsync(\n        '\"package_name\": \"host.exp.exponent\"',\n        `\"package_name\": \"${javaPackage}\"`,\n        path.join(shellPath, 'app', 'google-services.json')\n      );\n\n      // Let's not modify values of the original google-services.json file\n      // if they haven't been provided (in which case, googleAndroidApiKey\n      // and certificateHash will be an empty string). This will make sure\n      // we don't modify shell app's google-services needlessly.\n\n      // Google sign in\n      if (googleAndroidApiKey) {\n        await regexFileAsync(\n          /\"current_key\": \"(.*?)\"/,\n          `\"current_key\": \"${googleAndroidApiKey}\"`,\n          path.join(shellPath, 'app', 'google-services.json')\n        );\n      }\n      if (certificateHash) {\n        await regexFileAsync(\n          /\"certificate_hash\": \"(.*?)\"/,\n          `\"certificate_hash\": \"${certificateHash}\"`,\n          path.join(shellPath, 'app', 'google-services.json')\n        );\n      }\n    } else if (googleAndroidApiKey || certificateHash) {\n      // Both googleServicesFile and googleSignIn configuration have been provided.\n      // Let's print a helpful warning and not modify google-services.json.\n      fnLogger.warn(\n        'You have provided values for both `googleServicesFile` and `googleSignIn` in your `app.json`. Since SDK37 `googleServicesFile` overrides any other `google-services.json`-related configuration. Recommended way to fix this warning is to remove `googleSignIn` configuration from your `app.json` in favor of using only `googleServicesFile` to configure Google services.'\n      );\n    }\n  } else {\n    // Old behavior - googleSignIn overrides googleServicesFile\n\n    if (manifest.android && manifest.android.googleServicesFile) {\n      // googleServicesFile provided, let's warn the user that its contents\n      // are about to be modified.\n      fnLogger.warn(\n        'You have provided a custom `googleServicesFile` in your `app.json`. In projects below SDK37 `googleServicesFile` contents will be overridden with `googleSignIn` configuration. (Even if there is none, in which case the API key from `google-services.json` will be removed.) To mitigate this behavior upgrade to SDK37 or check out https://github.com/expo/expo/issues/7727#issuecomment-611544439 for a workaround.'\n      );\n    }\n\n    // Push notifications\n    await regexFileAsync(\n      '\"package_name\": \"host.exp.exponent\"',\n      `\"package_name\": \"${javaPackage}\"`,\n      path.join(shellPath, 'app', 'google-services.json')\n    );\n\n    // Google sign in\n    await regexFileAsync(\n      /\"current_key\": \"(.*?)\"/,\n      `\"current_key\": \"${googleAndroidApiKey}\"`,\n      path.join(shellPath, 'app', 'google-services.json')\n    );\n    await regexFileAsync(\n      /\"certificate_hash\": \"(.*?)\"/,\n      `\"certificate_hash\": \"${certificateHash}\"`,\n      path.join(shellPath, 'app', 'google-services.json')\n    );\n  }\n\n  // Set manifest url for debug mode\n  if (buildMode === 'debug') {\n    await regexFileAsync(\n      'DEVELOPMENT_URL = \"\"',\n      `DEVELOPMENT_URL = \"${fullManifestUrl}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'DetachBuildConstants.java'\n      )\n    );\n  }\n\n  // Facebook configuration\n\n  // There's no such pattern to replace in shell apps below SDK 36,\n  // so this will not have any effect on these apps.\n  if (manifest.facebookAppId) {\n    await regexFileAsync(\n      '<!-- ADD FACEBOOK APP ID CONFIG HERE -->',\n      `<meta-data android:name=\"com.facebook.sdk.ApplicationId\" android:value=\"${manifest.facebookAppId}\"/>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n  // There's no such pattern to replace in shell apps below SDK 36,\n  // so this will not have any effect on these apps.\n  if (manifest.facebookDisplayName) {\n    await regexFileAsync(\n      '<!-- ADD FACEBOOK APP DISPLAY NAME CONFIG HERE -->',\n      `<meta-data android:name=\"com.facebook.sdk.ApplicationName\" android:value=\"${manifest.facebookDisplayName}\"/>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n  // There's no such pattern to replace in shell apps below SDK 36,\n  // so this will not have any effect on these apps.\n  if (manifest.facebookAutoInitEnabled) {\n    await regexFileAsync(\n      '<meta-data android:name=\"com.facebook.sdk.AutoInitEnabled\" android:value=\"false\"/>',\n      '<meta-data android:name=\"com.facebook.sdk.AutoInitEnabled\" android:value=\"true\"/>',\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n  // There's no such pattern to replace in shell apps below SDK 36,\n  // so this will not have any effect on these apps.\n  if (manifest.facebookAutoLogAppEventsEnabled) {\n    await regexFileAsync(\n      '<meta-data android:name=\"com.facebook.sdk.AutoLogAppEventsEnabled\" android:value=\"false\"/>',\n      '<meta-data android:name=\"com.facebook.sdk.AutoLogAppEventsEnabled\" android:value=\"true\"/>',\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n  // There's no such pattern to replace in shell apps below SDK 36,\n  // so this will not have any effect on these apps.\n  if (manifest.facebookAdvertiserIDCollectionEnabled) {\n    await regexFileAsync(\n      '<meta-data android:name=\"com.facebook.sdk.AdvertiserIDCollectionEnabled\" android:value=\"false\"/>',\n      '<meta-data android:name=\"com.facebook.sdk.AdvertiserIDCollectionEnabled\" android:value=\"true\"/>',\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n}\n\nasync function buildShellAppAsync(context, sdkVersion, buildType, buildMode) {\n  let shellPath = shellPathForContext(context);\n  const ext = buildType === 'app-bundle' ? 'aab' : 'apk';\n\n  const isRelease = !!context.build.android && buildMode === 'release';\n  // concat on those strings is not very readable, but only alternative here is huge if statement\n  const debugOrRelease = isRelease ? 'Release' : 'Debug';\n  const devOrProd = isRelease ? 'Prod' : 'Dev';\n  const debugOrReleaseL = isRelease ? 'release' : 'debug';\n  const devOrProdL = isRelease ? 'prod' : 'dev';\n\n  const shellFile = `shell.${ext}`;\n  const shellUnalignedFile = `shell-unaligned.${ext}`;\n\n  const outputDirPath = path.join(\n    shellPath,\n    'app',\n    'build',\n    'outputs',\n    buildType === 'app-bundle' ? 'bundle' : 'apk'\n  );\n\n  let gradleBuildCommand;\n  let outputPath;\n  if (buildType === 'app-bundle') {\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 36) {\n      gradleBuildCommand = `:app:bundle${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, debugOrReleaseL, `app-${debugOrReleaseL}.aab`);\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      gradleBuildCommand = `:app:bundle${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, debugOrReleaseL, `app.aab`);\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = `:app:bundle${devOrProd}Kernel${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, `${devOrProdL}Kernel${debugOrRelease}`, `app.aab`);\n    } else {\n      // gradleBuildCommand = `:app:bundle${devOrProd}MinSdk${devOrProd}Kernel${debugOrRelease}`;\n      // outputPath = path.join(\n      //   outputDirPath,\n      //   `${devOrProdL}MinSdk${devOrProd}Kernel`,\n      //   debugOrReleaseL,\n      //   `app.aab`\n      // );\n\n      // TODO (wkozyra95) debug building app bundles for sdk 31 and older\n      // for now it has low priority\n      throw new Error('Android App Bundles are not supported for sdk31 and lower');\n    }\n  } else {\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      gradleBuildCommand = `:app:assemble${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, debugOrReleaseL, `app-${debugOrReleaseL}.apk`);\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = `:app:assemble${devOrProd}Kernel${debugOrRelease}`;\n      outputPath = path.join(\n        outputDirPath,\n        `${devOrProdL}Kernel`,\n        debugOrReleaseL,\n        `app-${devOrProdL}Kernel-${debugOrReleaseL}.apk`\n      );\n    } else {\n      gradleBuildCommand = `:app:assemble${devOrProd}MinSdk${devOrProd}Kernel${debugOrRelease}`;\n      outputPath = path.join(\n        outputDirPath,\n        `${devOrProdL}MinSdk${devOrProd}Kernel`,\n        debugOrReleaseL,\n        `app-${devOrProdL}MinSdk-${devOrProdL}Kernel-${debugOrReleaseL}-unsigned.apk`\n      );\n    }\n  }\n\n  await ExponentTools.removeIfExists(shellUnalignedFile);\n  await ExponentTools.removeIfExists(shellFile);\n  await ExponentTools.removeIfExists(outputPath);\n  if (isRelease) {\n    const androidBuildConfiguration = context.build.android;\n\n    const gradleArgs = [gradleBuildCommand];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n      env: {\n        ...process.env,\n        ANDROID_KEY_ALIAS: androidBuildConfiguration.keyAlias,\n        ANDROID_KEY_PASSWORD: androidBuildConfiguration.keyPassword,\n        ANDROID_KEYSTORE_PATH: androidBuildConfiguration.keystore,\n        ANDROID_KEYSTORE_PASSWORD: androidBuildConfiguration.keystorePassword,\n      },\n    });\n\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      await fs.copy(outputPath, shellFile);\n      // -c means \"only verify\"\n      await spawnAsync(`zipalign`, ['-c', '-v', '4', shellFile], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n    } else {\n      await fs.copy(outputPath, shellUnalignedFile);\n      await spawnAsync(\n        `jarsigner`,\n        [\n          '-verbose',\n          '-sigalg',\n          'SHA1withRSA',\n          '-digestalg',\n          'SHA1',\n          '-storepass',\n          androidBuildConfiguration.keystorePassword,\n          '-keypass',\n          androidBuildConfiguration.keyPassword,\n          '-keystore',\n          androidBuildConfiguration.keystore,\n          shellUnalignedFile,\n          androidBuildConfiguration.keyAlias,\n        ],\n        {\n          pipeToLogger: true,\n          loggerFields: { buildPhase: 'signing created apk' },\n        }\n      );\n      await spawnAsync(`zipalign`, ['-v', '4', shellUnalignedFile, shellFile], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n      await ExponentTools.removeIfExists(shellUnalignedFile);\n    }\n    await spawnAsync(\n      `jarsigner`,\n      ['-verify', '-verbose', '-certs', '-keystore', androidBuildConfiguration.keystore, shellFile],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy(shellFile, androidBuildConfiguration.outputFile || `/tmp/shell-signed.${ext}`);\n    await ExponentTools.removeIfExists(shellFile);\n  } else {\n    await spawnAsyncThrowError(`./gradlew`, [gradleBuildCommand], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      outputPath,\n      _.get(context, 'build.android.outputFile') || `/tmp/shell-debug.${ext}`\n    );\n    await ExponentTools.removeIfExists(outputPath);\n  }\n}\n\nexport function addDetachedConfigToExp(exp, context) {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n\n/**\n\nSome files in `android` directory have the following patterns of code:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// BEGIN_SDK_30\nsome SDK 30-specific code\n// END_SDK_30\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThe following function replaces all `BEGIN_SDK_XX` with `REMOVE_TO_HERE`\nand all `END_SDK_XX` with `REMOVE_FROM_HERE`, so after the change the code above would read:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE       <--- changed\nsome SDK 30-specific code\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE     <--- changed\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThis allows us to use `deleteLinesInFileAsync` function to remove obsolete SDKs code easily.\n\n */\nconst removeInvalidSdkLinesWhenPreparingShell = async (majorSdkVersion, filePath) => {\n  await regexFileAsync(\n    new RegExp(`BEGIN_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_TO_HERE`,\n    filePath\n  );\n  await regexFileAsync(\n    new RegExp(`END_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_FROM_HERE`,\n    filePath\n  );\n  await deleteLinesInFileAsync(\n    /WHEN_PREPARING_SHELL_REMOVE_FROM_HERE/g,\n    'WHEN_PREPARING_SHELL_REMOVE_TO_HERE',\n    filePath\n  );\n};\n\nasync function removeObsoleteSdks(shellPath, requiredSdkVersion) {\n  const filePathsToTransform = {\n    // Remove obsolete `expoview-abiXX_X_X` dependencies\n    appBuildGradle: path.join(shellPath, 'app/build.gradle'),\n    // Remove obsolete `host.exp.exponent:reactandroid:XX.X.X` dependencies from expoview\n    expoviewBuildGradle: path.join(shellPath, 'expoview/build.gradle'),\n    // Remove obsolete includeUnimodulesProjects\n    settingsBuildGradle: path.join(shellPath, 'settings.gradle'),\n    // Remove no-longer-valid interfaces from MultipleVersionReactNativeActivity\n    multipleVersionReactNativeActivity: path.join(\n      shellPath,\n      'expoview/src/main/java/host/exp/exponent/experience/MultipleVersionReactNativeActivity.java'\n    ),\n    // Remove invalid ABI versions from Constants\n    constants: path.join(shellPath, 'expoview/src/main/java/host/exp/exponent/Constants.java'),\n    // Remove non-existent DevSettingsActivities\n    appAndroidManifest: path.join(shellPath, 'app/src/main/AndroidManifest.xml'),\n  };\n\n  const majorSdkVersion = parseSdkMajorVersion(requiredSdkVersion);\n\n  // The single SDK change will happen when transitioning from SDK 30 to 31.\n  // Since SDK 31 there will be no versioned ABIs in shell applications, only unversioned one.\n  // And as such, we will treat the unversioned ABI as the SDK one by assigning TEMPORARY_ABI_VERSION.\n  const effectiveSdkVersion = majorSdkVersion > 30 ? 'UNVERSIONED' : `${majorSdkVersion}`;\n\n  if (effectiveSdkVersion === 'UNVERSIONED') {\n    await regexFileAsync(\n      'TEMPORARY_ABI_VERSION = null;',\n      `TEMPORARY_ABI_VERSION = \"${requiredSdkVersion}\";`,\n      filePathsToTransform.constants\n    );\n  }\n\n  await Promise.all(\n    Object.values(filePathsToTransform).map(filePath =>\n      removeInvalidSdkLinesWhenPreparingShell(effectiveSdkVersion, filePath)\n    )\n  );\n}\n\nasync function prepareEnabledModules(shellPath, modules) {\n  const enabledModulesDir = path.join(shellPath, 'enabled-modules');\n  const packagesDir = path.join(shellPath, '..', 'packages');\n  await fs.remove(enabledModulesDir);\n  if (!modules) {\n    await fs.ensureSymlink(packagesDir, enabledModulesDir);\n  } else {\n    await fs.mkdirp(enabledModulesDir);\n    await Promise.all(\n      modules.map(mod =>\n        fs.ensureSymlink(\n          path.join(packagesDir, mod.dirname),\n          path.join(enabledModulesDir, mod.dirname)\n        )\n      )\n    );\n  }\n}\n"],"sourceRoot":"/@expo/xdl@57.8.32/src"}